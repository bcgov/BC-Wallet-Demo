/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import { AriesOOBAction, AriesOOBActionFromJSONTyped, AriesOOBActionToJSON, AriesOOBActionToJSONTyped } from './AriesOOBAction';
/**
 * 
 * @export
 * @interface StepAction
 */
export interface StepAction {
    /**
     * Unique identifier for the action
     * @type {string}
     * @memberof StepAction
     */
    id: string;
    /**
     * Type of action
     * @type {string}
     * @memberof StepAction
     */
    actionType: string;
    /**
     * Title of the action
     * @type {string}
     * @memberof StepAction
     */
    title: string;
    /**
     * Descriptive text for the action
     * @type {string}
     * @memberof StepAction
     */
    text: string;
    /**
     * Date and time the step action was created
     * @type {Date}
     * @memberof StepAction
     */
    createdAt: Date;
    /**
     * Date and time the step action was last updated
     * @type {Date}
     * @memberof StepAction
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the StepAction interface.
 */
export function instanceOfStepAction(value: object): value is StepAction {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('actionType' in value) || value['actionType'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function StepActionFromJSON(json: any): StepAction {
    return StepActionFromJSONTyped(json, false);
}

export function StepActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): StepAction {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['actionType'] === 'ARIES_OOB') {
            return AriesOOBActionFromJSONTyped(json, ignoreDiscriminator);
        }
    }
    return {
        
        'id': json['id'],
        'actionType': json['actionType'],
        'title': json['title'],
        'text': json['text'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function StepActionToJSON(json: any): StepAction {
    return StepActionToJSONTyped(json, false);
}

export function StepActionToJSONTyped(value?: StepAction | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (!ignoreDiscriminator) {
        switch (value['actionType']) {
            case 'ARIES_OOB':
                return AriesOOBActionToJSONTyped(value as AriesOOBAction, ignoreDiscriminator);
            default:
                throw new Error(`No variant of StepAction exists with 'actionType=${value['actionType']}'`);
        }
    }

    return {
        
        'id': value['id'],
        'actionType': value['actionType'],
        'title': value['title'],
        'text': value['text'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

