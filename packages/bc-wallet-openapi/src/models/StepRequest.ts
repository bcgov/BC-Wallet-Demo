/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StepType } from './StepType';
import {
    StepTypeFromJSON,
    StepTypeFromJSONTyped,
    StepTypeToJSON,
    StepTypeToJSONTyped,
} from './StepType';
import type { StepRequestActionsInner } from './StepRequestActionsInner';
import {
    StepRequestActionsInnerFromJSON,
    StepRequestActionsInnerFromJSONTyped,
    StepRequestActionsInnerToJSON,
    StepRequestActionsInnerToJSONTyped,
} from './StepRequestActionsInner';

/**
 * 
 * @export
 * @interface StepRequest
 */
export interface StepRequest {
    /**
     * Title of the step
     * @type {string}
     * @memberof StepRequest
     */
    title: string;
    /**
     * Detailed description of the step
     * @type {string}
     * @memberof StepRequest
     */
    description: string;
    /**
     * Screen attached to step
     * @type {string}
     * @memberof StepRequest
     */
    screenId?: string;
    /**
     * Order of the step in the scenario
     * @type {number}
     * @memberof StepRequest
     */
    order: number;
    /**
     * 
     * @type {StepType}
     * @memberof StepRequest
     */
    type: StepType;
    /**
     * Optional sub-scenario for this step
     * @type {string}
     * @memberof StepRequest
     */
    subScenario?: string;
    /**
     * List of actions associated with this step
     * @type {Array<StepRequestActionsInner>}
     * @memberof StepRequest
     */
    actions: Array<StepRequestActionsInner>;
    /**
     * Asset referenced by this step
     * @type {string}
     * @memberof StepRequest
     */
    asset?: string;
}



/**
 * Check if a given object implements the StepRequest interface.
 */
export function instanceOfStepRequest(value: object): value is StepRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('order' in value) || value['order'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('actions' in value) || value['actions'] === undefined) return false;
    return true;
}

export function StepRequestFromJSON(json: any): StepRequest {
    return StepRequestFromJSONTyped(json, false);
}

export function StepRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StepRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'],
        'screenId': json['screenId'] == null ? undefined : json['screenId'],
        'order': json['order'],
        'type': StepTypeFromJSON(json['type']),
        'subScenario': json['subScenario'] == null ? undefined : json['subScenario'],
        'actions': ((json['actions'] as Array<any>).map(StepRequestActionsInnerFromJSON)),
        'asset': json['asset'] == null ? undefined : json['asset'],
    };
}

export function StepRequestToJSON(json: any): StepRequest {
    return StepRequestToJSONTyped(json, false);
}

export function StepRequestToJSONTyped(value?: StepRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'screenId': value['screenId'],
        'order': value['order'],
        'type': StepTypeToJSON(value['type']),
        'subScenario': value['subScenario'],
        'actions': ((value['actions'] as Array<any>).map(StepRequestActionsInnerToJSON)),
        'asset': value['asset'],
    };
}

