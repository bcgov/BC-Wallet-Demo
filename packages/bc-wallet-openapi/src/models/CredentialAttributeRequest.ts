/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CredentialAttributeType } from './CredentialAttributeType';
import {
    CredentialAttributeTypeFromJSON,
    CredentialAttributeTypeFromJSONTyped,
    CredentialAttributeTypeToJSON,
    CredentialAttributeTypeToJSONTyped,
} from './CredentialAttributeType';

/**
 * 
 * @export
 * @interface CredentialAttributeRequest
 */
export interface CredentialAttributeRequest {
    /**
     * Name of the attribute
     * @type {string}
     * @memberof CredentialAttributeRequest
     */
    name: string;
    /**
     * Default or example value of the attribute
     * @type {string}
     * @memberof CredentialAttributeRequest
     */
    value: string;
    /**
     * 
     * @type {CredentialAttributeType}
     * @memberof CredentialAttributeRequest
     */
    type: CredentialAttributeType;
}



/**
 * Check if a given object implements the CredentialAttributeRequest interface.
 */
export function instanceOfCredentialAttributeRequest(value: object): value is CredentialAttributeRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('value' in value) || value['value'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CredentialAttributeRequestFromJSON(json: any): CredentialAttributeRequest {
    return CredentialAttributeRequestFromJSONTyped(json, false);
}

export function CredentialAttributeRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CredentialAttributeRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'value': json['value'],
        'type': CredentialAttributeTypeFromJSON(json['type']),
    };
}

export function CredentialAttributeRequestToJSON(json: any): CredentialAttributeRequest {
    return CredentialAttributeRequestToJSONTyped(json, false);
}

export function CredentialAttributeRequestToJSONTyped(value?: CredentialAttributeRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'value': value['value'],
        'type': CredentialAttributeTypeToJSON(value['type']),
    };
}

