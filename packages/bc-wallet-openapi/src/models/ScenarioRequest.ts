/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StepRequest } from './StepRequest';
import {
    StepRequestFromJSON,
    StepRequestFromJSONTyped,
    StepRequestToJSON,
    StepRequestToJSONTyped,
} from './StepRequest';

/**
 * 
 * @export
 * @interface ScenarioRequest
 */
export interface ScenarioRequest {
    /**
     * Name of the scenario
     * @type {string}
     * @memberof ScenarioRequest
     */
    name: string;
    /**
     * Detailed description of the scenario
     * @type {string}
     * @memberof ScenarioRequest
     */
    description: string;
    /**
     * Ordered list of steps in the scenario
     * @type {Array<StepRequest>}
     * @memberof ScenarioRequest
     */
    steps: Array<StepRequest>;
    /**
     * References to personas used in this scenario
     * @type {Array<string>}
     * @memberof ScenarioRequest
     */
    personas: Array<string>;
    /**
     * Whether the workflow is hidden from the user
     * @type {boolean}
     * @memberof ScenarioRequest
     */
    hidden?: boolean;
}

/**
 * Check if a given object implements the ScenarioRequest interface.
 */
export function instanceOfScenarioRequest(value: object): value is ScenarioRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('steps' in value) || value['steps'] === undefined) return false;
    if (!('personas' in value) || value['personas'] === undefined) return false;
    return true;
}

export function ScenarioRequestFromJSON(json: any): ScenarioRequest {
    return ScenarioRequestFromJSONTyped(json, false);
}

export function ScenarioRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScenarioRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'steps': ((json['steps'] as Array<any>).map(StepRequestFromJSON)),
        'personas': json['personas'],
        'hidden': json['hidden'] == null ? undefined : json['hidden'],
    };
}

export function ScenarioRequestToJSON(json: any): ScenarioRequest {
    return ScenarioRequestToJSONTyped(json, false);
}

export function ScenarioRequestToJSONTyped(value?: ScenarioRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'steps': ((value['steps'] as Array<any>).map(StepRequestToJSON)),
        'personas': value['personas'],
        'hidden': value['hidden'],
    };
}

