/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Asset
 */
export interface Asset {
    /**
     * Unique identifier for the asset in the database
     * @type {string}
     * @memberof Asset
     */
    id: string;
    /**
     * Type of asset (e.g., image, document, icon)
     * @type {string}
     * @memberof Asset
     */
    mediaType: string;
    /**
     * Binary data of the asset
     * @type {string}
     * @memberof Asset
     */
    content: string;
    /**
     * Name of the asset file
     * @type {string}
     * @memberof Asset
     */
    fileName?: string;
    /**
     * Description of the asset
     * @type {string}
     * @memberof Asset
     */
    description?: string;
    /**
     * Date and time the asset was created
     * @type {Date}
     * @memberof Asset
     */
    createdAt: Date;
    /**
     * Date and time the asset was last updated
     * @type {Date}
     * @memberof Asset
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Asset interface.
 */
export function instanceOfAsset(value: object): value is Asset {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('mediaType' in value) || value['mediaType'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function AssetFromJSON(json: any): Asset {
    return AssetFromJSONTyped(json, false);
}

export function AssetFromJSONTyped(json: any, ignoreDiscriminator: boolean): Asset {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'mediaType': json['mediaType'],
        'content': json['content'],
        'fileName': json['fileName'] == null ? undefined : json['fileName'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function AssetToJSON(json: any): Asset {
    return AssetToJSONTyped(json, false);
}

export function AssetToJSONTyped(value?: Asset | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'mediaType': value['mediaType'],
        'content': value['content'],
        'fileName': value['fileName'],
        'description': value['description'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

