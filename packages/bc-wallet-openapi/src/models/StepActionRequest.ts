/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import { AcceptCredentialAction, AcceptCredentialActionFromJSONTyped, AcceptCredentialActionToJSON, AcceptCredentialActionToJSONTyped } from './AcceptCredentialAction';
import { AriesOOBAction, AriesOOBActionFromJSONTyped, AriesOOBActionToJSON, AriesOOBActionToJSONTyped } from './AriesOOBAction';
import { ButtonAction, ButtonActionFromJSONTyped, ButtonActionToJSON, ButtonActionToJSONTyped } from './ButtonAction';
import { ChooseWalletAction, ChooseWalletActionFromJSONTyped, ChooseWalletActionToJSON, ChooseWalletActionToJSONTyped } from './ChooseWalletAction';
import { SetupConnectionAction, SetupConnectionActionFromJSONTyped, SetupConnectionActionToJSON, SetupConnectionActionToJSONTyped } from './SetupConnectionAction';
import { ShareCredentialAction, ShareCredentialActionFromJSONTyped, ShareCredentialActionToJSON, ShareCredentialActionToJSONTyped } from './ShareCredentialAction';
/**
 * 
 * @export
 * @interface StepActionRequest
 */
export interface StepActionRequest {
    /**
     * Title of the action
     * @type {string}
     * @memberof StepActionRequest
     */
    title: string;
    /**
     * Descriptive text for the action
     * @type {string}
     * @memberof StepActionRequest
     */
    text: string;
    /**
     * 
     * @type {string}
     * @memberof StepActionRequest
     */
    actionType: string;
}

/**
 * Check if a given object implements the StepActionRequest interface.
 */
export function instanceOfStepActionRequest(value: object): value is StepActionRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('actionType' in value) || value['actionType'] === undefined) return false;
    return true;
}

export function StepActionRequestFromJSON(json: any): StepActionRequest {
    return StepActionRequestFromJSONTyped(json, false);
}

export function StepActionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StepActionRequest {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['actionType'] === 'ACCEPT_CREDENTIAL') {
            return AcceptCredentialActionFromJSONTyped(json, ignoreDiscriminator);
        }
        if (json['actionType'] === 'ARIES_OOB') {
            return AriesOOBActionFromJSONTyped(json, ignoreDiscriminator);
        }
        if (json['actionType'] === 'BUTTON') {
            return ButtonActionFromJSONTyped(json, ignoreDiscriminator);
        }
        if (json['actionType'] === 'CHOOSE_WALLET') {
            return ChooseWalletActionFromJSONTyped(json, ignoreDiscriminator);
        }
        if (json['actionType'] === 'SETUP_CONNECTION') {
            return SetupConnectionActionFromJSONTyped(json, ignoreDiscriminator);
        }
        if (json['actionType'] === 'SHARE_CREDENTIAL') {
            return ShareCredentialActionFromJSONTyped(json, ignoreDiscriminator);
        }
    }
    return {
        
        'title': json['title'],
        'text': json['text'],
        'actionType': json['actionType'],
    };
}

export function StepActionRequestToJSON(json: any): StepActionRequest {
    return StepActionRequestToJSONTyped(json, false);
}

export function StepActionRequestToJSONTyped(value?: StepActionRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (!ignoreDiscriminator) {
        switch (value['actionType']) {
            case 'ACCEPT_CREDENTIAL':
                return AcceptCredentialActionToJSONTyped(value as AcceptCredentialAction, ignoreDiscriminator);
            case 'ARIES_OOB':
                return AriesOOBActionToJSONTyped(value as AriesOOBAction, ignoreDiscriminator);
            case 'BUTTON':
                return ButtonActionToJSONTyped(value as ButtonAction, ignoreDiscriminator);
            case 'CHOOSE_WALLET':
                return ChooseWalletActionToJSONTyped(value as ChooseWalletAction, ignoreDiscriminator);
            case 'SETUP_CONNECTION':
                return SetupConnectionActionToJSONTyped(value as SetupConnectionAction, ignoreDiscriminator);
            case 'SHARE_CREDENTIAL':
                return ShareCredentialActionToJSONTyped(value as ShareCredentialAction, ignoreDiscriminator);
            default:
                throw new Error(`No variant of StepActionRequest exists with 'actionType=${value['actionType']}'`);
        }
    }

    return {
        
        'title': value['title'],
        'text': value['text'],
        'actionType': value['actionType'],
    };
}

