/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { AnonCredRevocation } from './AnonCredRevocation';
import {
    instanceOfAnonCredRevocation,
    AnonCredRevocationFromJSON,
    AnonCredRevocationFromJSONTyped,
    AnonCredRevocationToJSON,
} from './AnonCredRevocation';
import type { RevocationInfo } from './RevocationInfo';
import {
    instanceOfRevocationInfo,
    RevocationInfoFromJSON,
    RevocationInfoFromJSONTyped,
    RevocationInfoToJSON,
} from './RevocationInfo';

/**
 * @type CredentialDefinitionRevocation
 * 
 * @export
 */
export type CredentialDefinitionRevocation = AnonCredRevocation | RevocationInfo;

export function CredentialDefinitionRevocationFromJSON(json: any): CredentialDefinitionRevocation {
    return CredentialDefinitionRevocationFromJSONTyped(json, false);
}

export function CredentialDefinitionRevocationFromJSONTyped(json: any, ignoreDiscriminator: boolean): CredentialDefinitionRevocation {
    if (json == null) {
        return json;
    }
    if (instanceOfAnonCredRevocation(json)) {
        return AnonCredRevocationFromJSONTyped(json, true);
    }
    if (instanceOfRevocationInfo(json)) {
        return RevocationInfoFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CredentialDefinitionRevocationToJSON(json: any): any {
    return CredentialDefinitionRevocationToJSONTyped(json, false);
}

export function CredentialDefinitionRevocationToJSONTyped(value?: CredentialDefinitionRevocation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfAnonCredRevocation(value)) {
        return AnonCredRevocationToJSON(value as AnonCredRevocation);
    }
    if (instanceOfRevocationInfo(value)) {
        return RevocationInfoToJSON(value as RevocationInfo);
    }

    return {};
}

