/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentifierType } from './IdentifierType';
import {
    IdentifierTypeFromJSON,
    IdentifierTypeFromJSONTyped,
    IdentifierTypeToJSON,
    IdentifierTypeToJSONTyped,
} from './IdentifierType';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * Unique identifier of the user
     * @type {string}
     * @memberof User
     */
    id?: string;
    /**
     * 
     * @type {IdentifierType}
     * @memberof User
     */
    identifierType?: IdentifierType;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    identifier?: string;
    /**
     * Date and time the asset was created
     * @type {Date}
     * @memberof User
     */
    createdAt?: Date;
    /**
     * Date and time the asset was created
     * @type {Date}
     * @memberof User
     */
    updatedAt?: Date;
}



/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'identifierType': json['identifierType'] == null ? undefined : IdentifierTypeFromJSON(json['identifierType']),
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'identifierType': IdentifierTypeToJSON(value['identifierType']),
        'identifier': value['identifier'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}

