/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { CredentialRepresentation } from './CredentialRepresentation';
import {
    instanceOfCredentialRepresentation,
    CredentialRepresentationFromJSON,
    CredentialRepresentationFromJSONTyped,
    CredentialRepresentationToJSON,
} from './CredentialRepresentation';
import type { OCARepresentation } from './OCARepresentation';
import {
    instanceOfOCARepresentation,
    OCARepresentationFromJSON,
    OCARepresentationFromJSONTyped,
    OCARepresentationToJSON,
} from './OCARepresentation';

/**
 * @type CredentialDefinitionRepresentationsInner
 * 
 * @export
 */
export type CredentialDefinitionRepresentationsInner = CredentialRepresentation | OCARepresentation;

export function CredentialDefinitionRepresentationsInnerFromJSON(json: any): CredentialDefinitionRepresentationsInner {
    return CredentialDefinitionRepresentationsInnerFromJSONTyped(json, false);
}

export function CredentialDefinitionRepresentationsInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): CredentialDefinitionRepresentationsInner {
    if (json == null) {
        return json;
    }
    if (instanceOfCredentialRepresentation(json)) {
        return CredentialRepresentationFromJSONTyped(json, true);
    }
    if (instanceOfOCARepresentation(json)) {
        return OCARepresentationFromJSONTyped(json, true);
    }

    return {} as any;
}

export function CredentialDefinitionRepresentationsInnerToJSON(json: any): any {
    return CredentialDefinitionRepresentationsInnerToJSONTyped(json, false);
}

export function CredentialDefinitionRepresentationsInnerToJSONTyped(value?: CredentialDefinitionRepresentationsInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    if (instanceOfCredentialRepresentation(value)) {
        return CredentialRepresentationToJSON(value as CredentialRepresentation);
    }
    if (instanceOfOCARepresentation(value)) {
        return OCARepresentationToJSON(value as OCARepresentation);
    }

    return {};
}

