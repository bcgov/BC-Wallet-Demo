/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonaRequest
 */
export interface PersonaRequest {
    /**
     * Name of the persona
     * @type {string}
     * @memberof PersonaRequest
     */
    name: string;
    /**
     * Role of the persona in the system
     * @type {string}
     * @memberof PersonaRequest
     */
    role: string;
    /**
     * Detailed description of the persona
     * @type {string}
     * @memberof PersonaRequest
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof PersonaRequest
     */
    headshotImage?: string;
    /**
     * 
     * @type {string}
     * @memberof PersonaRequest
     */
    bodyImage?: string;
    /**
     * Whether the persona is hidden from the user
     * @type {boolean}
     * @memberof PersonaRequest
     */
    hidden?: boolean;
}

/**
 * Check if a given object implements the PersonaRequest interface.
 */
export function instanceOfPersonaRequest(value: object): value is PersonaRequest {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function PersonaRequestFromJSON(json: any): PersonaRequest {
    return PersonaRequestFromJSONTyped(json, false);
}

export function PersonaRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonaRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'role': json['role'],
        'description': json['description'] == null ? undefined : json['description'],
        'headshotImage': json['headshotImage'] == null ? undefined : json['headshotImage'],
        'bodyImage': json['bodyImage'] == null ? undefined : json['bodyImage'],
        'hidden': json['hidden'] == null ? undefined : json['hidden'],
    };
}

export function PersonaRequestToJSON(json: any): PersonaRequest {
    return PersonaRequestToJSONTyped(json, false);
}

export function PersonaRequestToJSONTyped(value?: PersonaRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'role': value['role'],
        'description': value['description'],
        'headshotImage': value['headshotImage'],
        'bodyImage': value['bodyImage'],
        'hidden': value['hidden'],
    };
}

