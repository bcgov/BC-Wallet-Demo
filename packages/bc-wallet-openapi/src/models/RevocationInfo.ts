/* tslint:disable */
/* eslint-disable */
/**
 * BC Wallet API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RevocationInfo
 */
export interface RevocationInfo {
    /**
     * Id of the revocation information
     * @type {string}
     * @memberof RevocationInfo
     */
    id: string;
    /**
     * Title of the revocation information
     * @type {string}
     * @memberof RevocationInfo
     */
    title: string;
    /**
     * Detailed description of the revocation process or requirements
     * @type {string}
     * @memberof RevocationInfo
     */
    description: string;
    /**
     * Date and time the Revocation info was created
     * @type {Date}
     * @memberof RevocationInfo
     */
    createdAt: Date;
    /**
     * Date and time the Revocation info was last updated
     * @type {Date}
     * @memberof RevocationInfo
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the RevocationInfo interface.
 */
export function instanceOfRevocationInfo(value: object): value is RevocationInfo {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
    return true;
}

export function RevocationInfoFromJSON(json: any): RevocationInfo {
    return RevocationInfoFromJSONTyped(json, false);
}

export function RevocationInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RevocationInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'title': json['title'],
        'description': json['description'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function RevocationInfoToJSON(json: any): RevocationInfo {
    return RevocationInfoToJSONTyped(json, false);
}

export function RevocationInfoToJSONTyped(value?: RevocationInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'title': value['title'],
        'description': value['description'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

