services:
  bc-wallet-api-server:
    build:
      context: ../..
      dockerfile: ./apps/bc-wallet-api-server/Dockerfile
    restart: unless-stopped
    networks:
      - api_net
      - messagebroker_net
      - db_net
    environment:
      # Only include variables this service needs
      - NODE_PORT=3000
      # - DATABASE_URL=${DATABASE_URL} uncomment when using URL instead of vars above
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - APP_NAME=${APP_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
      # cors settings
      - CORS_DISABLED=${CORS_DISABLED}
      - ALLOW_ORIGINS=${ALLOW_ORIGINS}
      - ALLOW_METHODS=${ALLOW_METHODS}
      - ALLOW_HEADERS=${ALLOW_HEADERS}
      - ALLOW_CREDENTIALS=${ALLOW_CREDENTIALS}
      # active-mq settings
      - AMQ_HOST=rabbitmq
      - AMQ_USER=${RABBITMQ_USER}
      - AMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - AMQ_TRANSPORT=tcp

    depends_on:
      - postgres  # Ensure Postgres starts first
    ports:
      - "${API_PORT}:3000" # remove when enabling proxy

  bc-wallet-traction-adapter:
    build:
      context: ../..
      dockerfile: ./packages/bc-wallet-traction-adapter/Dockerfile
    restart: unless-stopped
    networks:
      - messagebroker_net

    environment:
      - NODE_PORT=3000
#     - AMQ_HOST=rabbitmq
      - AMQ_PORT=5672
      - AMQ_TRANSPORT=tcp
      - AMQ_USER=${RABBITMQ_USER}
      - AMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - APP_NAME=${APP_NAME}
      - LOG_LEVEL=${LOG_LEVEL}
    depends_on:
      - rabbitmq  # Ensure RabbitMQ starts first

  postgres:
    image: postgres:16
    restart: unless-stopped
    networks:
      - db_net
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_EXPOSED_PORT}:5432" # Expose Postgres port, default 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:4-management  # Using RabbitMQ 4.x with management plugin
    restart: unless-stopped
    networks:
      - messagebroker_net
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "${RABBITMQ_EXPOSED_PORT:-5672}:5672"
      - "${RABBITMQ_MGMT_EXPOSED_PORT:-15672}:15672"

volumes:
  postgres_data:  # Named volume for Postgres data persistence

networks:
  api_net:
    driver: bridge
    name: api_net
    internal: false
  messagebroker_net:
    driver: bridge
    name: messagebroker_net
    internal: false         # set to false to be able to expose for debugging
  db_net:
    driver: bridge
    name: db_net
    internal: false         # set to false to be able to expose for debugging