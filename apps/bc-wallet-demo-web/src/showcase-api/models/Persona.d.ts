/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Asset } from '../../src/models/Asset'

/**
 *
 * @export
 * @interface Persona
 */
export interface Persona {
  /**
   * Unique identifier for the persona
   * @type {string}
   * @memberof Persona
   */
  id: string
  /**
   * Name of the persona
   * @type {string}
   * @memberof Persona
   */
  name?: string
  /**
   * URL-friendly identifier for the persona
   * @type {string}
   * @memberof Persona
   */
  slug?: string
  /**
   * Role of the persona in the system
   * @type {string}
   * @memberof Persona
   */
  role?: string
  /**
   * Detailed description of the persona
   * @type {string}
   * @memberof Persona
   */
  description?: string
  /**
   *
   * @type {Asset}
   * @memberof Persona
   */
  headshotImage?: Asset
  /**
   *
   * @type {Asset}
   * @memberof Persona
   */
  bodyImage?: Asset
  /**
   * Whether the persona is hidden from the user
   * @type {boolean}
   * @memberof Persona
   */
  hidden?: boolean
  /**
   * Date and time the persona was created
   * @type {Date}
   * @memberof Persona
   */
  createdAt?: Date
  /**
   * Date and time the persona was last updated
   * @type {Date}
   * @memberof Persona
   */
  updatedAt?: Date
}
/**
 * Check if a given object implements the Persona interface.
 */
export declare function instanceOfPersona(value: object): value is Persona
export declare function PersonaFromJSON(json: any): Persona
export declare function PersonaFromJSONTyped(json: any, ignoreDiscriminator: boolean): Persona
export declare function PersonaToJSON(json: any): Persona
export declare function PersonaToJSONTyped(value?: Persona | null, ignoreDiscriminator?: boolean): any
//# sourceMappingURL=Persona.d.ts.map
