/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { StepAction } from './StepAction'
import { StepActionFromJSON, StepActionToJSON } from './StepAction'
import { StepTypeFromJSON, StepTypeToJSON } from './StepType'
import type { Asset } from './Asset'
import { AssetFromJSON, AssetToJSON } from './Asset'

import { StepType } from './StepType'


/**
 *
 * @export
 * @interface Step
 */
export interface Step {
  /**
   * Unique identifier for the step
   * @type {string}
   * @memberof Step
   */
  id: string;
  /**
   * Title of the step
   * @type {string}
   * @memberof Step
   */
  title: string;
  /**
   * Detailed description of the step
   * @type {string}
   * @memberof Step
   */
  description: string;
  /**
   * Screen attached to step
   * @type {string}
   * @memberof Step
   */
  screenId?: string;
  /**
   * Order of the step in the scenario
   * @type {number}
   * @memberof Step
   */
  order: number;
  /**
   *
   * @type {StepType}
   * @memberof Step
   */
  type: StepType;
  /**
   * Optional sub-scenario for this step
   * @type {string}
   * @memberof Step
   */
  subScenario?: string;
  /**
   *
   * @type {Array<StepAction>}
   * @memberof Step
   */
  actions: Array<StepAction>;
  /**
   *
   * @type {Asset}
   * @memberof Step
   */
  asset?: Asset;
  /**
   *
   * @type {Asset}
   * @memberof Step
   */
  iconLight?: Asset;
  /**
   *
   * @type {Asset}
   * @memberof Step
   */
  iconDark?: Asset;
  /**
   * Date and time the step was created
   * @type {Date}
   * @memberof Step
   */
  createdAt: Date;
  /**
   * Date and time the step was last updated
   * @type {Date}
   * @memberof Step
   */
  updatedAt: Date;
}



/**
 * Check if a given object implements the Step interface.
 */
export function instanceOfStep(value: object): value is Step {
  if (!('id' in value) || value['id'] === undefined) return false;
  if (!('title' in value) || value['title'] === undefined) return false;
  if (!('description' in value) || value['description'] === undefined) return false;
  if (!('order' in value) || value['order'] === undefined) return false;
  if (!('type' in value) || value['type'] === undefined) return false;
  if (!('actions' in value) || value['actions'] === undefined) return false;
  if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
  if (!('updatedAt' in value) || value['updatedAt'] === undefined) return false;
  return true;
}

export function StepFromJSON(json: any): Step {
  return StepFromJSONTyped(json, false);
}

export function StepFromJSONTyped(json: any, ignoreDiscriminator: boolean): Step {
  if (json == null) {
    return json;
  }
  return {

    'id': json['id'],
    'title': json['title'],
    'description': json['description'],
    'screenId': json['screenId'] == null ? undefined : json['screenId'],
    'order': json['order'],
    'type': StepTypeFromJSON(json['type']),
    'subScenario': json['subScenario'] == null ? undefined : json['subScenario'],
    'actions': ((json['actions'] as Array<any>).map(StepActionFromJSON)),
    'asset': json['asset'] == null ? undefined : AssetFromJSON(json['asset']),
    'iconLight': json['iconLight'] == null ? undefined : AssetFromJSON(json['iconLight']),
    'iconDark': json['iconDark'] == null ? undefined : AssetFromJSON(json['iconDark']),
    'createdAt': (new Date(json['createdAt'])),
    'updatedAt': (new Date(json['updatedAt'])),
  };
}

export function StepToJSON(json: any): Step {
  return StepToJSONTyped(json, false);
}

export function StepToJSONTyped(value?: Step | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {

    'id': value['id'],
    'title': value['title'],
    'description': value['description'],
    'screenId': value['screenId'],
    'order': value['order'],
    'type': StepTypeToJSON(value['type']),
    'subScenario': value['subScenario'],
    'actions': ((value['actions'] as Array<any>).map(StepActionToJSON)),
    'asset': AssetToJSON(value['asset']),
    'iconLight': AssetToJSON(value['iconLight']),
    'iconDark': AssetToJSON(value['iconDark']),
    'createdAt': ((value['createdAt']).toISOString()),
    'updatedAt': ((value['updatedAt']).toISOString()),
  };
}

