'use strict'
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCredentialDefinition = instanceOfCredentialDefinition;
exports.CredentialDefinitionFromJSON = CredentialDefinitionFromJSON;
exports.CredentialDefinitionFromJSONTyped = CredentialDefinitionFromJSONTyped;
exports.CredentialDefinitionToJSON = CredentialDefinitionToJSON;
exports.CredentialDefinitionToJSONTyped = CredentialDefinitionToJSONTyped;
const CredentialDefinitionRevocation_1 = require("./CredentialDefinitionRevocation");
const CredentialSchema_1 = require("./CredentialSchema");
const Asset_1 = require("./Asset");
const CredentialType_1 = require("./CredentialType");
const CredentialDefinitionRepresentationsInner_1 = require("./CredentialDefinitionRepresentationsInner");
const IdentifierType_1 = require("./IdentifierType");
/**
 * Check if a given object implements the CredentialDefinition interface.
 */
function instanceOfCredentialDefinition(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    return true;
}
function CredentialDefinitionFromJSON(json) {
    return CredentialDefinitionFromJSONTyped(json, false);
}
function CredentialDefinitionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'credentialSchema': json['credentialSchema'] == null ? undefined : (0, CredentialSchema_1.CredentialSchemaFromJSON)(json['credentialSchema']),
        'identifierType': json['identifierType'] == null ? undefined : (0, IdentifierType_1.IdentifierTypeFromJSON)(json['identifierType']),
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'version': json['version'] == null ? undefined : json['version'],
        'type': json['type'] == null ? undefined : (0, CredentialType_1.CredentialTypeFromJSON)(json['type']),
        'representations': json['representations'] == null ? undefined : (json['representations'].map(CredentialDefinitionRepresentationsInner_1.CredentialDefinitionRepresentationsInnerFromJSON)),
        'revocation': json['revocation'] == null ? undefined : (0, CredentialDefinitionRevocation_1.CredentialDefinitionRevocationFromJSON)(json['revocation']),
        'iconId': json['iconId'] == null ? undefined : json['iconId'],
        'icon': json['icon'] == null ? undefined : (0, Asset_1.AssetFromJSON)(json['icon']),
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'updatedAt': json['updatedAt'] == null ? undefined : (new Date(json['updatedAt'])),
    };
}
function CredentialDefinitionToJSON(json) {
    return CredentialDefinitionToJSONTyped(json, false);
}
function CredentialDefinitionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
        'credentialSchema': (0, CredentialSchema_1.CredentialSchemaToJSON)(value['credentialSchema']),
        'identifierType': (0, IdentifierType_1.IdentifierTypeToJSON)(value['identifierType']),
        'identifier': value['identifier'],
        'version': value['version'],
        'type': (0, CredentialType_1.CredentialTypeToJSON)(value['type']),
        'representations': value['representations'] == null ? undefined : (value['representations'].map(CredentialDefinitionRepresentationsInner_1.CredentialDefinitionRepresentationsInnerToJSON)),
        'revocation': (0, CredentialDefinitionRevocation_1.CredentialDefinitionRevocationToJSON)(value['revocation']),
        'iconId': value['iconId'],
        'icon': (0, Asset_1.AssetToJSON)(value['icon']),
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updatedAt': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
    };
}
//# sourceMappingURL=CredentialDefinition.js.map