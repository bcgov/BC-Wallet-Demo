"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PresentationFlowTypeEnum = void 0;
exports.instanceOfPresentationFlow = instanceOfPresentationFlow;
exports.PresentationFlowFromJSON = PresentationFlowFromJSON;
exports.PresentationFlowFromJSONTyped = PresentationFlowFromJSONTyped;
exports.PresentationFlowToJSON = PresentationFlowToJSON;
exports.PresentationFlowToJSONTyped = PresentationFlowToJSONTyped;
const RelyingParty_1 = require("./RelyingParty");
const Persona_1 = require("./Persona");
const Step_1 = require("./Step");
/**
 * @export
 */
exports.PresentationFlowTypeEnum = {
    Issuance: 'ISSUANCE',
    Presentation: 'PRESENTATION'
};
/**
 * Check if a given object implements the PresentationFlow interface.
 */
function instanceOfPresentationFlow(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('relyingParty' in value) || value['relyingParty'] === undefined)
        return false;
    return true;
}
function PresentationFlowFromJSON(json) {
    return PresentationFlowFromJSONTyped(json, false);
}
function PresentationFlowFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'type': json['type'],
        'steps': json['steps'] == null ? undefined : (json['steps'].map(Step_1.StepFromJSON)),
        'personas': json['personas'] == null ? undefined : (json['personas'].map(Persona_1.PersonaFromJSON)),
        'relyingParty': (0, RelyingParty_1.RelyingPartyFromJSON)(json['relyingParty']),
    };
}
function PresentationFlowToJSON(json) {
    return PresentationFlowToJSONTyped(json, false);
}
function PresentationFlowToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'type': value['type'],
        'steps': value['steps'] == null ? undefined : (value['steps'].map(Step_1.StepToJSON)),
        'personas': value['personas'] == null ? undefined : (value['personas'].map(Persona_1.PersonaToJSON)),
        'relyingParty': (0, RelyingParty_1.RelyingPartyToJSON)(value['relyingParty']),
    };
}
//# sourceMappingURL=PresentationFlow.js.map