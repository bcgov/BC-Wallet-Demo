"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCredentialSchemaRequest = instanceOfCredentialSchemaRequest;
exports.CredentialSchemaRequestFromJSON = CredentialSchemaRequestFromJSON;
exports.CredentialSchemaRequestFromJSONTyped = CredentialSchemaRequestFromJSONTyped;
exports.CredentialSchemaRequestToJSON = CredentialSchemaRequestToJSON;
exports.CredentialSchemaRequestToJSONTyped = CredentialSchemaRequestToJSONTyped;
const CredentialAttributeRequest_1 = require("./CredentialAttributeRequest");
const IdentifierType_1 = require("./IdentifierType");
const Source_1 = require("./Source");
/**
 * Check if a given object implements the CredentialSchemaRequest interface.
 */
function instanceOfCredentialSchemaRequest(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('version' in value) || value['version'] === undefined)
        return false;
    return true;
}
function CredentialSchemaRequestFromJSON(json) {
    return CredentialSchemaRequestFromJSONTyped(json, false);
}
function CredentialSchemaRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'version': json['version'],
        'identifierType': json['identifierType'] == null ? undefined : (0, IdentifierType_1.IdentifierTypeFromJSON)(json['identifierType']),
        'source': json['source'] == null ? undefined : (0, Source_1.SourceFromJSON)(json['source']),
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'attributes': json['attributes'] == null ? undefined : (json['attributes'].map(CredentialAttributeRequest_1.CredentialAttributeRequestFromJSON)),
    };
}
function CredentialSchemaRequestToJSON(json) {
    return CredentialSchemaRequestToJSONTyped(json, false);
}
function CredentialSchemaRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'version': value['version'],
        'identifierType': (0, IdentifierType_1.IdentifierTypeToJSON)(value['identifierType']),
        'source': (0, Source_1.SourceToJSON)(value['source']),
        'identifier': value['identifier'],
        'attributes': value['attributes'] == null ? undefined : (value['attributes'].map(CredentialAttributeRequest_1.CredentialAttributeRequestToJSON)),
    };
}
//# sourceMappingURL=CredentialSchemaRequest.js.map