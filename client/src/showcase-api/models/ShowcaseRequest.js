"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfShowcaseRequest = instanceOfShowcaseRequest;
exports.ShowcaseRequestFromJSON = ShowcaseRequestFromJSON;
exports.ShowcaseRequestFromJSONTyped = ShowcaseRequestFromJSONTyped;
exports.ShowcaseRequestToJSON = ShowcaseRequestToJSON;
exports.ShowcaseRequestToJSONTyped = ShowcaseRequestToJSONTyped;
const ShowcaseStatus_1 = require("./ShowcaseStatus");
/**
 * Check if a given object implements the ShowcaseRequest interface.
 */
function instanceOfShowcaseRequest(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('hidden' in value) || value['hidden'] === undefined)
        return false;
    if (!('scenarios' in value) || value['scenarios'] === undefined)
        return false;
    if (!('credentialDefinitions' in value) || value['credentialDefinitions'] === undefined)
        return false;
    if (!('personas' in value) || value['personas'] === undefined)
        return false;
    return true;
}
function ShowcaseRequestFromJSON(json) {
    return ShowcaseRequestFromJSONTyped(json, false);
}
function ShowcaseRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'description': json['description'],
        'status': (0, ShowcaseStatus_1.ShowcaseStatusFromJSON)(json['status']),
        'hidden': json['hidden'],
        'scenarios': json['scenarios'],
        'credentialDefinitions': json['credentialDefinitions'],
        'personas': json['personas'],
        'bannerImage': json['bannerImage'] == null ? undefined : json['bannerImage'],
        'completionMessage': json['completionMessage'] == null ? undefined : json['completionMessage'],
    };
}
function ShowcaseRequestToJSON(json) {
    return ShowcaseRequestToJSONTyped(json, false);
}
function ShowcaseRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'description': value['description'],
        'status': (0, ShowcaseStatus_1.ShowcaseStatusToJSON)(value['status']),
        'hidden': value['hidden'],
        'scenarios': value['scenarios'],
        'credentialDefinitions': value['credentialDefinitions'],
        'personas': value['personas'],
        'bannerImage': value['bannerImage'],
        'completionMessage': value['completionMessage'],
    };
}
//# sourceMappingURL=ShowcaseRequest.js.map