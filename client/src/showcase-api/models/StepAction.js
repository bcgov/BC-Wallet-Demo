"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfStepAction = instanceOfStepAction;
exports.StepActionFromJSON = StepActionFromJSON;
exports.StepActionFromJSONTyped = StepActionFromJSONTyped;
exports.StepActionToJSON = StepActionToJSON;
exports.StepActionToJSONTyped = StepActionToJSONTyped;
const AriesOOBAction_1 = require("./AriesOOBAction");
/**
 * Check if a given object implements the StepAction interface.
 */
function instanceOfStepAction(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('actionType' in value) || value['actionType'] === undefined)
        return false;
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('text' in value) || value['text'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function StepActionFromJSON(json) {
    return StepActionFromJSONTyped(json, false);
}
function StepActionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    if (!ignoreDiscriminator) {
        if (json['actionType'] === 'ARIES_OOB') {
            return (0, AriesOOBAction_1.AriesOOBActionFromJSONTyped)(json, ignoreDiscriminator);
        }
    }
    return {
        'id': json['id'],
        'actionType': json['actionType'],
        'title': json['title'],
        'text': json['text'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}
function StepActionToJSON(json) {
    return StepActionToJSONTyped(json, false);
}
function StepActionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    if (!ignoreDiscriminator) {
        switch (value['actionType']) {
            case 'ARIES_OOB':
                return (0, AriesOOBAction_1.AriesOOBActionToJSONTyped)(value, ignoreDiscriminator);
            default:
                throw new Error(`No variant of StepAction exists with 'actionType=${value['actionType']}'`);
        }
    }
    return {
        'id': value['id'],
        'actionType': value['actionType'],
        'title': value['title'],
        'text': value['text'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}
//# sourceMappingURL=StepAction.js.map