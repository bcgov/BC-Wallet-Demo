'use strict'
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfCredentialDefinitionRequest = instanceOfCredentialDefinitionRequest;
exports.CredentialDefinitionRequestFromJSON = CredentialDefinitionRequestFromJSON;
exports.CredentialDefinitionRequestFromJSONTyped = CredentialDefinitionRequestFromJSONTyped;
exports.CredentialDefinitionRequestToJSON = CredentialDefinitionRequestToJSON;
exports.CredentialDefinitionRequestToJSONTyped = CredentialDefinitionRequestToJSONTyped;
const CredentialType_1 = require("./CredentialType");
const CredentialDefinitionRequestRevocation_1 = require("./CredentialDefinitionRequestRevocation");
const CredentialDefinitionRepresentationsInner_1 = require("./CredentialDefinitionRepresentationsInner");
const IdentifierType_1 = require("./IdentifierType");
/**
 * Check if a given object implements the CredentialDefinitionRequest interface.
 */
function instanceOfCredentialDefinitionRequest(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('version' in value) || value['version'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('credentialSchema' in value) || value['credentialSchema'] === undefined)
        return false;
    if (!('icon' in value) || value['icon'] === undefined)
        return false;
    return true;
}
function CredentialDefinitionRequestFromJSON(json) {
    return CredentialDefinitionRequestFromJSONTyped(json, false);
}
function CredentialDefinitionRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'identifierType': json['identifierType'] == null ? undefined : (0, IdentifierType_1.IdentifierTypeFromJSON)(json['identifierType']),
        'identifier': json['identifier'] == null ? undefined : json['identifier'],
        'version': json['version'],
        'type': (0, CredentialType_1.CredentialTypeFromJSON)(json['type']),
        'credentialSchema': json['credentialSchema'],
        'representations': json['representations'] == null ? undefined : (json['representations'].map(CredentialDefinitionRepresentationsInner_1.CredentialDefinitionRepresentationsInnerFromJSON)),
        'revocation': json['revocation'] == null ? undefined : (0, CredentialDefinitionRequestRevocation_1.CredentialDefinitionRequestRevocationFromJSON)(json['revocation']),
        'icon': json['icon'],
    };
}
function CredentialDefinitionRequestToJSON(json) {
    return CredentialDefinitionRequestToJSONTyped(json, false);
}
function CredentialDefinitionRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'identifierType': (0, IdentifierType_1.IdentifierTypeToJSON)(value['identifierType']),
        'identifier': value['identifier'],
        'version': value['version'],
        'type': (0, CredentialType_1.CredentialTypeToJSON)(value['type']),
        'credentialSchema': value['credentialSchema'],
        'representations': value['representations'] == null ? undefined : (value['representations'].map(CredentialDefinitionRepresentationsInner_1.CredentialDefinitionRepresentationsInnerToJSON)),
        'revocation': (0, CredentialDefinitionRequestRevocation_1.CredentialDefinitionRequestRevocationToJSON)(value['revocation']),
        'icon': value['icon'],
    };
}
//# sourceMappingURL=CredentialDefinitionRequest.js.map