'use strict'
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfShowcase = instanceOfShowcase;
exports.ShowcaseFromJSON = ShowcaseFromJSON;
exports.ShowcaseFromJSONTyped = ShowcaseFromJSONTyped;
exports.ShowcaseToJSON = ShowcaseToJSON;
exports.ShowcaseToJSONTyped = ShowcaseToJSONTyped;
const CredentialDefinition_1 = require("./CredentialDefinition");
const ShowcaseStatus_1 = require("./ShowcaseStatus");
const Persona_1 = require("./Persona");
const Asset_1 = require("./Asset");
const Scenario_1 = require("./Scenario");
/**
 * Check if a given object implements the Showcase interface.
 */
function instanceOfShowcase(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('slug' in value) || value['slug'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('status' in value) || value['status'] === undefined)
        return false;
    if (!('hidden' in value) || value['hidden'] === undefined)
        return false;
    if (!('scenarios' in value) || value['scenarios'] === undefined)
        return false;
    if (!('credentialDefinitions' in value) || value['credentialDefinitions'] === undefined)
        return false;
    if (!('personas' in value) || value['personas'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('updatedAt' in value) || value['updatedAt'] === undefined)
        return false;
    return true;
}
function ShowcaseFromJSON(json) {
    return ShowcaseFromJSONTyped(json, false);
}
function ShowcaseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'name': json['name'],
        'slug': json['slug'],
        'description': json['description'],
        'status': (0, ShowcaseStatus_1.ShowcaseStatusFromJSON)(json['status']),
        'hidden': json['hidden'],
        'scenarios': (json['scenarios'].map(Scenario_1.ScenarioFromJSON)),
        'credentialDefinitions': (json['credentialDefinitions'].map(CredentialDefinition_1.CredentialDefinitionFromJSON)),
        'personas': (json['personas'].map(Persona_1.PersonaFromJSON)),
        'bannerImage': json['bannerImage'] == null ? undefined : (0, Asset_1.AssetFromJSON)(json['bannerImage']),
        'completionMessage': json['completionMessage'] == null ? undefined : json['completionMessage'],
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}
function ShowcaseToJSON(json) {
    return ShowcaseToJSONTyped(json, false);
}
function ShowcaseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'name': value['name'],
        'slug': value['slug'],
        'description': value['description'],
        'status': (0, ShowcaseStatus_1.ShowcaseStatusToJSON)(value['status']),
        'hidden': value['hidden'],
        'scenarios': (value['scenarios'].map(Scenario_1.ScenarioToJSON)),
        'credentialDefinitions': (value['credentialDefinitions'].map(CredentialDefinition_1.CredentialDefinitionToJSON)),
        'personas': (value['personas'].map(Persona_1.PersonaToJSON)),
        'bannerImage': (0, Asset_1.AssetToJSON)(value['bannerImage']),
        'completionMessage': value['completionMessage'],
        'createdAt': ((value['createdAt']).toISOString()),
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}
//# sourceMappingURL=Showcase.js.map