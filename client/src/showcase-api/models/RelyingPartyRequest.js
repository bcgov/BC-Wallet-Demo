'use strict'
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfRelyingPartyRequest = instanceOfRelyingPartyRequest;
exports.RelyingPartyRequestFromJSON = RelyingPartyRequestFromJSON;
exports.RelyingPartyRequestFromJSONTyped = RelyingPartyRequestFromJSONTyped;
exports.RelyingPartyRequestToJSON = RelyingPartyRequestToJSON;
exports.RelyingPartyRequestToJSONTyped = RelyingPartyRequestToJSONTyped;
const RelyingPartyType_1 = require("./RelyingPartyType");
/**
 * Check if a given object implements the RelyingPartyRequest interface.
 */
function instanceOfRelyingPartyRequest(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('credentialDefinitions' in value) || value['credentialDefinitions'] === undefined)
        return false;
    return true;
}
function RelyingPartyRequestFromJSON(json) {
    return RelyingPartyRequestFromJSONTyped(json, false);
}
function RelyingPartyRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'description': json['description'],
        'type': (0, RelyingPartyType_1.RelyingPartyTypeFromJSON)(json['type']),
        'organization': json['organization'] == null ? undefined : json['organization'],
        'logo': json['logo'] == null ? undefined : json['logo'],
        'credentialDefinitions': json['credentialDefinitions'],
    };
}
function RelyingPartyRequestToJSON(json) {
    return RelyingPartyRequestToJSONTyped(json, false);
}
function RelyingPartyRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'description': value['description'],
        'type': (0, RelyingPartyType_1.RelyingPartyTypeToJSON)(value['type']),
        'organization': value['organization'],
        'logo': value['logo'],
        'credentialDefinitions': value['credentialDefinitions'],
    };
}
//# sourceMappingURL=RelyingPartyRequest.js.map