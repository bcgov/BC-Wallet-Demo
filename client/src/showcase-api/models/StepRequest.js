'use strict'
/* tslint:disable */
/* eslint-disable */
/**
 * Credential Showcase API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfStepRequest = instanceOfStepRequest;
exports.StepRequestFromJSON = StepRequestFromJSON;
exports.StepRequestFromJSONTyped = StepRequestFromJSONTyped;
exports.StepRequestToJSON = StepRequestToJSON;
exports.StepRequestToJSONTyped = StepRequestToJSONTyped;
const StepType_1 = require("./StepType");
const StepRequestActionsInner_1 = require("./StepRequestActionsInner");
/**
 * Check if a given object implements the StepRequest interface.
 */
function instanceOfStepRequest(value) {
    if (!('title' in value) || value['title'] === undefined)
        return false;
    if (!('description' in value) || value['description'] === undefined)
        return false;
    if (!('order' in value) || value['order'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('actions' in value) || value['actions'] === undefined)
        return false;
    return true;
}
function StepRequestFromJSON(json) {
    return StepRequestFromJSONTyped(json, false);
}
function StepRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'title': json['title'],
        'description': json['description'],
        'order': json['order'],
        'type': (0, StepType_1.StepTypeFromJSON)(json['type']),
        'subScenario': json['subScenario'] == null ? undefined : json['subScenario'],
        'actions': (json['actions'].map(StepRequestActionsInner_1.StepRequestActionsInnerFromJSON)),
        'asset': json['asset'] == null ? undefined : json['asset'],
    };
}
function StepRequestToJSON(json) {
    return StepRequestToJSONTyped(json, false);
}
function StepRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'title': value['title'],
        'description': value['description'],
        'order': value['order'],
        'type': (0, StepType_1.StepTypeToJSON)(value['type']),
        'subScenario': value['subScenario'],
        'actions': (value['actions'].map(StepRequestActionsInner_1.StepRequestActionsInnerToJSON)),
        'asset': value['asset'],
    };
}
//# sourceMappingURL=StepRequest.js.map