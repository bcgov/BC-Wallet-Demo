name: 'Run Tests'
description: 'Sets up Node.js environment and runs tests using Turbo'

inputs:
  node-version:
    description: 'Node.js version to use'
    required: false
    default: '20'
  pnpm-version:
    description: 'PNPM version to use'
    required: false
    default: '8'

outputs:
  status:
    description: 'Test execution status (success/failure)'
    value: ${{ steps.test-status.outputs.status }}

runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ inputs.pnpm-version }}
        run_install: false
        
    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
        
    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      shell: bash
      run: pnpm install
      
    - name: Build models
      id: build-models
      shell: bash
      run: pnpm run generate-build:models

    - name: Run tests
      id: tests
      shell: bash
      run: pnpm run test

    - name: Set test status
      id: test-status
      if: always()
      shell: bash
      run: |
        if [ "${{ steps.tests.outcome }}" == "success" ]; then
          echo "status=success" >> $GITHUB_OUTPUT
        else
          echo "status=failure" >> $GITHUB_OUTPUT
        fi 