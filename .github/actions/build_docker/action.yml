name: 'Build Docker Image'
description: 'Builds and pushes a Docker image to a registry'
inputs:
  context:
    description: 'Docker build context'
    required: true
  dockerfile:
    description: 'Path to Dockerfile'
    required: true
  image_name:
    description: 'Name of the image'
    required: true
  registry:
    description: 'Container registry'
    required: true
  registry_username:
    description: 'Registry username'
    required: true
  registry_password:
    description: 'Registry password'
    required: true
  visibility:
    description: 'Package visibility (public or private)'
    required: false
    default: 'private'
outputs:
  image_tag:
    description: 'The tag of the built image'
    value: ${{ steps.set-output.outputs.image_tag }}
runs:
  using: 'composite'
  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry_username }}
        password: ${{ inputs.registry_password }}

    - name: Generate image tag
      id: docker_build
      shell: bash
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          TAG="pr-${{ github.event.number }}"
        else
          TAG="${{ github.sha }}"
        fi
        echo "image_tag=${TAG}" >> $GITHUB_OUTPUT

    - name: Login to registry
      shell: bash
      run: echo "${{ inputs.registry_password }}" | docker login ${{ inputs.registry }} -u ${{ inputs.registry_username }} --password-stdin

    - name: Build and push
      shell: bash
      run: |
        docker build -t ${{ inputs.registry }}/${{ inputs.image_name }}:$TAG ${{ inputs.context }}
        
        # Push with visibility setting if using GHCR
        if [[ "${{ inputs.registry }}" == "ghcr.io" ]]; then
          docker push ${{ inputs.registry }}/${{ inputs.image_name }}:$TAG --visibility=${{ inputs.visibility }}
        else
          docker push ${{ inputs.registry }}/${{ inputs.image_name }}:$TAG
        fi 