name: Build, Push and Deploy 
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
        - "apps/bc-wallet-api-server/**"
        - "apps/bc-wallet-traction-adapter/**"
        - "apps/bc-wallet-showcase-creator/**"
        - "apps/bc-wallet-demo-server/**"
        - "apps/bc-wallet-demo-web/**"
        - "charts/**"
        - ".github/**"

jobs:
  build_api_server:
    name: "Build API Server"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Build API Server Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-api-server/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-api-server
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_traction_adapter:
    name: "Build Traction Adapter"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Build Traction Adapter Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-traction-adapter/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-traction-adapter
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_showcase_creator:
    name: "Build Showcase Creator"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Build Showcase Creator Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-showcase-creator/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-showcase-creator
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_demo_server:
    name: "Build Demo Server"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Build Demo Server Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-demo-server/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-demo-server
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  build_demo_web:
    name: "Build Demo Web"
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - name: Build Demo Web Image
        uses: ./.github/actions/build_docker
        id: builder
        with:
          context: "."
          dockerfile: "./apps/bc-wallet-demo-web/Dockerfile"
          image_name: ${{ github.repository_owner}}/bc-wallet-demo-web
          registry: ghcr.io
          registry_username: ${{ github.repository_owner}}
          registry_password: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      image_tag: ${{ steps.builder.outputs.image_tag }}

  deploy_dev:
    name: Deploy to Development
    environment: development
    runs-on: ubuntu-latest
    needs:
      - build_api_server
      - build_traction_adapter
      - build_showcase_creator
      - build_demo_server
      - build_demo_web
    if: ${{ contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"
 
      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_DEV_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/bc-wallet
          helm dependency update
          helm upgrade --install bc-wallet --namespace ${{ secrets.OPENSHIFT_DEV_NAMESPACE }} -f ./values.yaml \
            --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} --set showcase_creator.image.tag=${{ needs.build_showcase_creator.outputs.image_tag }} --set demo_web.image.tag=${{ needs.build_demo_web.outputs.image_tag }} --set demo_server.image.tag=${{ needs.build_demo_server.outputs.image_tag }} \
            --set api_server.env.ENCRYPTION_KEY=${{secrets.ENCRYPTION_KEY}} \
            --set api_server.env.OIDC_CLIENT_SECRET=${{secrets.OIDC_CLIENT_SECRET}} \
            --set api_server.env.OIDC_CLIENT_ID=${{secrets.OIDC_CLIENT_ID}} \
            --set traction_adapter.env.TRACTION_DEFAULT_API_KEY=${{secrets.TRACTION_DEFAULT_API_KEY}} \
            --set demo_server.env.TRACTION_WEBHOOK_SECRET=${{secrets.TRACTION_WEBHOOK_SECRET}} \
            --set rabbitmq.auth.password=${{secrets.RABBITMQ_PASSWORD}} \
            . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/bc-wallet-api-server
          oc rollout restart deployment/bc-wallet-traction-adapter
          oc rollout restart deployment/bc-wallet-showcase-creator
          oc rollout restart deployment/bc-wallet-demo-server
          oc rollout restart deployment/bc-wallet-demo-web

  deploy_uat:
    name: Deploy to UAT
    environment: uat  
    runs-on: ubuntu-latest
    needs: deploy_dev
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_UAT_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/bc-wallet
          helm dependency update
          helm upgrade --install bc-wallet --namespace ${{ secrets.OPENSHIFT_UAT_NAMESPACE }} -f ./values.yaml \
            --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} --set showcase_creator.image.tag=${{ needs.build_showcase_creator.outputs.image_tag }} --set demo_web.image.tag=${{ needs.build_demo_web.outputs.image_tag }} --set demo_server.image.tag=${{ needs.build_demo_server.outputs.image_tag }} \
            --set api_server.env.ENCRYPTION_KEY=${{secrets.ENCRYPTION_KEY}} \
            --set api_server.env.OIDC_CLIENT_SECRET=${{secrets.OIDC_CLIENT_SECRET}} \
            --set api_server.env.OIDC_CLIENT_ID=${{secrets.OIDC_CLIENT_ID}} \
            --set traction_adapter.env.TRACTION_DEFAULT_API_KEY=${{secrets.TRACTION_DEFAULT_API_KEY}} \
            --set demo_server.env.TRACTION_WEBHOOK_SECRET=${{secrets.TRACTION_WEBHOOK_SECRET}} \
            --set rabbitmq.auth.password=${{secrets.RABBITMQ_PASSWORD}} \
            . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/bc-wallet-api-server
          oc rollout restart deployment/bc-wallet-traction-adapter
          oc rollout restart deployment/bc-wallet-showcase-creator
          oc rollout restart deployment/bc-wallet-demo-server
          oc rollout restart deployment/bc-wallet-demo-web

  deploy_prod:
    name: Deploy to Production
    environment: production 
    runs-on: ubuntu-latest
    needs: deploy_uat
    steps:
      - uses: actions/checkout@v4

      - name: Install OpenShift CLI tools
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: "4.14"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
          openshift_token: ${{ secrets.OPENSHIFT_TOKEN }}
          certificate_authority_data: ${{ secrets.OPENSHIFT_CA_CRT }}
          namespace: ${{ secrets.OPENSHIFT_PROD_NAMESPACE }}
     
      - name: Deploy to OpenShift with Helm
        run: |
          cd charts/bc-wallet
          helm dependency update
          helm upgrade --install bc-wallet --namespace ${{ secrets.OPENSHIFT_PROD_NAMESPACE }} -f ./values.yaml \
            --set api_server.image.tag=${{ needs.build_api_server.outputs.image_tag }} --set traction_adapter.image.tag=${{ needs.build_traction_adapter.outputs.image_tag }} --set showcase_creator.image.tag=${{ needs.build_showcase_creator.outputs.image_tag }} --set demo_web.image.tag=${{ needs.build_demo_web.outputs.image_tag }} --set demo_server.image.tag=${{ needs.build_demo_server.outputs.image_tag }} \
            --set api_server.env.ENCRYPTION_KEY=${{secrets.ENCRYPTION_KEY}} \
            --set api_server.env.OIDC_CLIENT_SECRET=${{secrets.OIDC_CLIENT_SECRET}} \
            --set api_server.env.OIDC_CLIENT_ID=${{secrets.OIDC_CLIENT_ID}} \
            --set traction_adapter.env.TRACTION_DEFAULT_API_KEY=${{secrets.TRACTION_DEFAULT_API_KEY}} \
            --set demo_server.env.TRACTION_WEBHOOK_SECRET=${{secrets.TRACTION_WEBHOOK_SECRET}} \
            --set rabbitmq.auth.password=${{secrets.RABBITMQ_PASSWORD}} \
            . --wait
      
      - name: Restart Deployments
        run: |
          oc rollout restart deployment/bc-wallet-api-server
          oc rollout restart deployment/bc-wallet-traction-adapter
          oc rollout restart deployment/bc-wallet-showcase-creator
          oc rollout restart deployment/bc-wallet-demo-server
          oc rollout restart deployment/bc-wallet-demo-web

  image-scan:
    name: "Image Scan"
    needs:
      - build_api_server
      - build_traction_adapter
      - build_showcase_creator
      - build_demo_server
      - build_demo_web
    runs-on: ubuntu-latest
    steps:
      - name: Run Trivy Image Scan
        uses: ./.github/actions/trivy-scan
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/bc-wallet-api-server:${{ needs.build_api_server.outputs.image_tag }},
            ghcr.io/${{ github.repository_owner }}/bc-wallet-traction-adapter:${{ needs.build_traction_adapter.outputs.image_tag }},
            ghcr.io/${{ github.repository_owner }}/bc-wallet-demo-web:${{ needs.build_demo_web.outputs.image_tag }},
            ghcr.io/${{ github.repository_owner }}/bc-wallet-showcase-creator:${{ needs.build_showcase_creator.outputs.image_tag }},
            ghcr.io/${{ github.repository_owner }}/bc-wallet-demo-server:${{ needs.build_demo_server.outputs.image_tag }}