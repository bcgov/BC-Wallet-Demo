name: Build and Deploy

on:
  push:
    branches:
      - develop
    paths:
      - 'apps/bc-wallet-api-server/**'
      - 'packages/bc-wallet-traction-adapter/**'
  workflow_dispatch:
    inputs:
      api_server:
        description: 'Build and deploy API server'
        type: boolean
        default: false
      traction_adapter:
        description: 'Build and deploy Traction adapter'
        type: boolean
        default: false

jobs:
  determine-changes:
    runs-on: ubuntu-latest
    outputs:
      api_server: ${{ steps.check-changes.outputs.api_server }}
      traction_adapter: ${{ steps.check-changes.outputs.traction_adapter }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          ref: ${{ github.event.inputs.branch || github.ref }}

      - name: Check for changes
        id: check-changes
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # For manual triggers, use the inputs
            echo "api_server=${{ github.event.inputs.api_server }}" >> $GITHUB_OUTPUT
            echo "traction_adapter=${{ github.event.inputs.traction_adapter }}" >> $GITHUB_OUTPUT
          else
            # For push events, check commit message and paths
            echo "api_server=$(if [[ "${{ github.event.head_commit.message }}" == *"[api-server]"* ]] || git diff --name-only HEAD^ HEAD | grep -q "^apps/bc-wallet-api-server/"; then echo "true"; else echo "false"; fi)" >> $GITHUB_OUTPUT
            echo "traction_adapter=$(if [[ "${{ github.event.head_commit.message }}" == *"[traction-adapter]"* ]] || git diff --name-only HEAD^ HEAD | grep -q "^packages/bc-wallet-traction-adapter/"; then echo "true"; else echo "false"; fi)" >> $GITHUB_OUTPUT
          fi

  build-api-server:
    needs: determine-changes
    if: needs.determine-changes.outputs.api_server == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/${{ secrets.ECR_REGISTRY }}

      - name: Build and Push API Server
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/dev/bc-wallet-api-server/Dockerfile
          push: true
          tags: public.ecr.aws/${{ secrets.ECR_REGISTRY }}/bc-wallet-api-server:${{ github.sha }}
          no-cache: true

  build-traction-adapter:
    needs: determine-changes
    if: needs.determine-changes.outputs.traction_adapter == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR Public
        run: aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws/${{ secrets.ECR_REGISTRY }}

      - name: Build and Push Traction Adapter
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/dev/bc-wallet-traction-adapter/Dockerfile
          push: true
          tags: public.ecr.aws/${{ secrets.ECR_REGISTRY }}/bc-wallet-traction-adapter:${{ github.sha }}
          no-cache: true

  deploy:
    needs: [determine-changes, build-api-server, build-traction-adapter]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd /home/${{ secrets.VPS_USERNAME }}/bc-wallet-api
            
            # Deploy API server if changed
            if [[ "${{ needs.determine-changes.outputs.api_server }}" == "true" ]]; then
              export TAG=${{ github.sha }} && sudo -E docker compose -f docker/dev/docker-compose.yml pull bc-wallet-api-server
              sudo docker compose -f docker/dev/docker-compose.yml stop bc-wallet-api-server
              sudo docker compose -f docker/dev/docker-compose.yml rm -f bc-wallet-api-server
              export TAG=${{ github.sha }} && sudo -E docker compose -f docker/dev/docker-compose.yml up -d --no-deps --force-recreate bc-wallet-api-server
            fi

            # Deploy traction adapter if changed
            if [[ "${{ needs.determine-changes.outputs.traction_adapter }}" == "true" ]]; then
              export TAG=${{ github.sha }} && sudo -E docker compose -f docker/dev/docker-compose.yml pull bc-wallet-traction-adapter
              sudo docker compose -f docker/dev/docker-compose.yml stop bc-wallet-traction-adapter
              sudo docker compose -f docker/dev/docker-compose.yml rm -f bc-wallet-traction-adapter
              export TAG=${{ github.sha }} && sudo -E docker compose -f docker/dev/docker-compose.yml up -d --no-deps --force-recreate bc-wallet-traction-adapter
            fi
